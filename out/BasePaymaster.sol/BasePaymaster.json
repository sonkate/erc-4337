{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "extraUnstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract EntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract EntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "name": "setEntryPoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "paymaster",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "paymasterData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "owner()": "8da5cb5b",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "setEntryPoint(address)": "584465f2",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,address,bytes,bytes),bytes32,uint256)": "7bfd0845",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"extraUnstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract EntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract EntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"name\":\"setEntryPoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"extraUnstakeDelaySec\":\"- set the stake to the entrypoint's default unstakeDelay plus this value.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,address,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"requestId\":\"hash of the user's request data.\",\"userOp\":\"the user operation\"},\"returns\":{\"context\":\"value to send to a postOp  zero length to signify postOp is not required.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,address,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agree to pay (using its stake) revert to reject this request. actual payment is done after postOp is called, by deducting actual call cost form the paymaster's stake.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. validates that the postOp is called only by the entryPoint\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/BasePaymaster.sol\":{\"keccak256\":\"0x94d5868bb5d07d3026fab4f9ac0495da03a15299bddbcfd15da67e68b5a47876\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f2b33707eed458385bb60e68c81805a5ba69c8479aa407d1177003554b7239ba\",\"dweb:/ipfs/Qmd2ebQcUbNnPoeCWjYMqkENjsjSZU7sbgYYvDPU5GQTsk\"]},\"src/EntryPoint.sol\":{\"keccak256\":\"0x37b3f420f755876707aab414169a1e5668a6668f3a50bd004bbe490bd9eaa028\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fc5f08317121f76b0d581a0522e04fb6e2fc8d8c37dfd0a028cad0f6475f53c6\",\"dweb:/ipfs/QmafPNddYncWkTqZnT2noXpHveM7ip6qWXwjbLWDkA3Xjk\"]},\"src/ICreate2Deployer.sol\":{\"keccak256\":\"0x9c87355c3336c634fed9ddefaf25213010bcaba6f2f093883c479370242ab2bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e0f0137adb8cae68ecaabe17f0d59490c256f7d18779fe5478a647f126a27cd0\",\"dweb:/ipfs/QmfXUGxzGyNcnvfd8ucZF1sFCnif9hhWi2NqwPrujermzJ\"]},\"src/IPaymaster.sol\":{\"keccak256\":\"0x3dd5fb6bac922965c7067b90feebf9ef48f6655c878f5de03415970b98d7c46d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cd4fcc1a94428cef508b11a2ec63d33cb0257079bc72a49778fc0e11c3935d10\",\"dweb:/ipfs/Qmd4qqzBmMEVLRAy4P1tkpbkFKF5swFF9j3q2tmS1G5M1q\"]},\"src/IWallet.sol\":{\"keccak256\":\"0x08492113b3efca41a9b5661cc578469ae5adbc270b4739e62647291045c79433\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6fb33acdc8ad1d3362cb8b108477f9efb8334fa7629449b14e80f95485859431\",\"dweb:/ipfs/QmTXLoGC2MBdZc4wXPjsdVDN8r1MtkZ92GtQU63BNCgacv\"]},\"src/StakeManager.sol\":{\"keccak256\":\"0xdfc03f75b144f2f6c9503477a0e4d852d7e838bb9cf3b7d29bb23a8e096c799b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a81c37f0af8ccb487ace7f2cd11959a5684ab3e724d3ecb504187ca797898cab\",\"dweb:/ipfs/QmUWdwME9soC1vGeL4wG88T3j9AR35iA179at6AxEL3L3N\"]},\"src/UserOperation.sol\":{\"keccak256\":\"0x7d6a9690b67f922eeb477c9b797e6e46f99b82569f0675ac27a4abf27b9af046\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ff96957f89ed876904e1265cbea13452f1da2cc0397bb8f67ca6879a2c3d885e\",\"dweb:/ipfs/QmdSBux7nW9Rnd7VRhVh2ffUaWKpBgr923Fq482igQfzUm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "extraUnstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract EntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract EntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntryPoint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "extraUnstakeDelaySec": "- set the stake to the entrypoint's default unstakeDelay plus this value."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,address,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "requestId": "hash of the user's request data.",
              "userOp": "the user operation"
            },
            "returns": {
              "context": "value to send to a postOp  zero length to signify postOp is not required."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,address,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agree to pay (using its stake) revert to reject this request. actual payment is done after postOp is called, by deducting actual call cost form the paymaster's stake."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BasePaymaster.sol": "BasePaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/BasePaymaster.sol": {
        "keccak256": "0x94d5868bb5d07d3026fab4f9ac0495da03a15299bddbcfd15da67e68b5a47876",
        "urls": [
          "bzz-raw://f2b33707eed458385bb60e68c81805a5ba69c8479aa407d1177003554b7239ba",
          "dweb:/ipfs/Qmd2ebQcUbNnPoeCWjYMqkENjsjSZU7sbgYYvDPU5GQTsk"
        ],
        "license": "GPL-3.0"
      },
      "src/EntryPoint.sol": {
        "keccak256": "0x37b3f420f755876707aab414169a1e5668a6668f3a50bd004bbe490bd9eaa028",
        "urls": [
          "bzz-raw://fc5f08317121f76b0d581a0522e04fb6e2fc8d8c37dfd0a028cad0f6475f53c6",
          "dweb:/ipfs/QmafPNddYncWkTqZnT2noXpHveM7ip6qWXwjbLWDkA3Xjk"
        ],
        "license": "GPL-3.0"
      },
      "src/ICreate2Deployer.sol": {
        "keccak256": "0x9c87355c3336c634fed9ddefaf25213010bcaba6f2f093883c479370242ab2bd",
        "urls": [
          "bzz-raw://e0f0137adb8cae68ecaabe17f0d59490c256f7d18779fe5478a647f126a27cd0",
          "dweb:/ipfs/QmfXUGxzGyNcnvfd8ucZF1sFCnif9hhWi2NqwPrujermzJ"
        ],
        "license": "GPL-3.0"
      },
      "src/IPaymaster.sol": {
        "keccak256": "0x3dd5fb6bac922965c7067b90feebf9ef48f6655c878f5de03415970b98d7c46d",
        "urls": [
          "bzz-raw://cd4fcc1a94428cef508b11a2ec63d33cb0257079bc72a49778fc0e11c3935d10",
          "dweb:/ipfs/Qmd4qqzBmMEVLRAy4P1tkpbkFKF5swFF9j3q2tmS1G5M1q"
        ],
        "license": "GPL-3.0"
      },
      "src/IWallet.sol": {
        "keccak256": "0x08492113b3efca41a9b5661cc578469ae5adbc270b4739e62647291045c79433",
        "urls": [
          "bzz-raw://6fb33acdc8ad1d3362cb8b108477f9efb8334fa7629449b14e80f95485859431",
          "dweb:/ipfs/QmTXLoGC2MBdZc4wXPjsdVDN8r1MtkZ92GtQU63BNCgacv"
        ],
        "license": "GPL-3.0"
      },
      "src/StakeManager.sol": {
        "keccak256": "0xdfc03f75b144f2f6c9503477a0e4d852d7e838bb9cf3b7d29bb23a8e096c799b",
        "urls": [
          "bzz-raw://a81c37f0af8ccb487ace7f2cd11959a5684ab3e724d3ecb504187ca797898cab",
          "dweb:/ipfs/QmUWdwME9soC1vGeL4wG88T3j9AR35iA179at6AxEL3L3N"
        ],
        "license": "GPL-3.0-only"
      },
      "src/UserOperation.sol": {
        "keccak256": "0x7d6a9690b67f922eeb477c9b797e6e46f99b82569f0675ac27a4abf27b9af046",
        "urls": [
          "bzz-raw://ff96957f89ed876904e1265cbea13452f1da2cc0397bb8f67ca6879a2c3d885e",
          "dweb:/ipfs/QmdSBux7nW9Rnd7VRhVh2ffUaWKpBgr923Fq482igQfzUm"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BasePaymaster.sol",
    "id": 342,
    "exportedSymbols": {
      "BasePaymaster": [
        341
      ],
      "Context": [
        134
      ],
      "EntryPoint": [
        1778
      ],
      "ICreate2Deployer": [
        1791
      ],
      "IPaymaster": [
        1824
      ],
      "IWallet": [
        1838
      ],
      "Ownable": [
        112
      ],
      "StakeManager": [
        2300
      ],
      "UserOperation": [
        2327
      ],
      "UserOperationLib": [
        2496
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:4037:2",
    "nodes": [
      {
        "id": 136,
        "nodeType": "PragmaDirective",
        "src": "36:23:2",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 137,
        "nodeType": "ImportDirective",
        "src": "98:61:2",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 342,
        "sourceUnit": 113,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 138,
        "nodeType": "ImportDirective",
        "src": "160:26:2",
        "nodes": [],
        "absolutePath": "src/IPaymaster.sol",
        "file": "./IPaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 342,
        "sourceUnit": 1825,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 139,
        "nodeType": "ImportDirective",
        "src": "187:26:2",
        "nodes": [],
        "absolutePath": "src/EntryPoint.sol",
        "file": "./EntryPoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 342,
        "sourceUnit": 1779,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 341,
        "nodeType": "ContractDefinition",
        "src": "367:3705:2",
        "nodes": [
          {
            "id": 147,
            "nodeType": "VariableDeclaration",
            "src": "428:28:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "b0d691fe",
            "mutability": "mutable",
            "name": "entryPoint",
            "nameLocation": "446:10:2",
            "scope": 341,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EntryPoint_$1778",
              "typeString": "contract EntryPoint"
            },
            "typeName": {
              "id": 146,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 145,
                "name": "EntryPoint",
                "nameLocations": [
                  "428:10:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1778,
                "src": "428:10:2"
              },
              "referencedDeclaration": 1778,
              "src": "428:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EntryPoint_$1778",
                "typeString": "contract EntryPoint"
              }
            },
            "visibility": "public"
          },
          {
            "id": 158,
            "nodeType": "FunctionDefinition",
            "src": "463:79:2",
            "nodes": [],
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "499:43:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 154,
                        "name": "_entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "523:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntryPoint_$1778",
                          "typeString": "contract EntryPoint"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_EntryPoint_$1778",
                          "typeString": "contract EntryPoint"
                        }
                      ],
                      "id": 153,
                      "name": "setEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "509:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_EntryPoint_$1778_$returns$__$",
                        "typeString": "function (contract EntryPoint)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "509:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "509:26:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "486:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "475:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_EntryPoint_$1778",
                    "typeString": "contract EntryPoint"
                  },
                  "typeName": {
                    "id": 149,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 148,
                      "name": "EntryPoint",
                      "nameLocations": [
                        "475:10:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "475:10:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "475:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EntryPoint_$1778",
                      "typeString": "contract EntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "474:24:2"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:2"
            },
            "scope": 341,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 171,
            "nodeType": "FunctionDefinition",
            "src": "548:105:2",
            "nodes": [],
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "612:41:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 166,
                      "name": "entryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "622:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntryPoint_$1778",
                        "typeString": "contract EntryPoint"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 167,
                      "name": "_entryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "635:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntryPoint_$1778",
                        "typeString": "contract EntryPoint"
                      }
                    },
                    "src": "622:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EntryPoint_$1778",
                      "typeString": "contract EntryPoint"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "622:24:2"
                }
              ]
            },
            "functionSelector": "584465f2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 163,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "602:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "602:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "602:9:2"
              }
            ],
            "name": "setEntryPoint",
            "nameLocation": "557:13:2",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "582:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "571:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_EntryPoint_$1778",
                    "typeString": "contract EntryPoint"
                  },
                  "typeName": {
                    "id": 160,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 159,
                      "name": "EntryPoint",
                      "nameLocations": [
                        "571:10:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "571:10:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "571:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EntryPoint_$1778",
                      "typeString": "contract EntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "570:24:2"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "612:0:2"
            },
            "scope": 341,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 184,
            "nodeType": "FunctionDefinition",
            "src": "659:192:2",
            "nodes": [],
            "baseFunctions": [
              1808
            ],
            "functionSelector": "7bfd0845",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "validatePaymasterUserOp",
            "nameLocation": "668:23:2",
            "overrides": {
              "id": 180,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "811:8:2"
            },
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "724:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "701:29:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$2327_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 173,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 172,
                      "name": "UserOperation",
                      "nameLocations": [
                        "701:13:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2327,
                      "src": "701:13:2"
                    },
                    "referencedDeclaration": 2327,
                    "src": "701:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$2327_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "748:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "740:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "775:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "767:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "691:97:2"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "842:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "829:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "828:22:2"
            },
            "scope": 341,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 205,
            "nodeType": "FunctionDefinition",
            "src": "857:216:2",
            "nodes": [],
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "985:88:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 195,
                      "name": "_requireFromEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "995:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "995:24:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 199,
                        "name": "mode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1037:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PostOpMode_$1823",
                          "typeString": "enum IPaymaster.PostOpMode"
                        }
                      },
                      {
                        "id": 200,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "1043:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 201,
                        "name": "actualGasCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "1052:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PostOpMode_$1823",
                          "typeString": "enum IPaymaster.PostOpMode"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 198,
                      "name": "_postOp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "1029:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_PostOpMode_$1823_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1029:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:37:2"
                }
              ]
            },
            "baseFunctions": [
              1819
            ],
            "functionSelector": "a9a23409",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postOp",
            "nameLocation": "866:6:2",
            "overrides": {
              "id": 193,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "976:8:2"
            },
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "mode",
                  "nameLocation": "893:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "882:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PostOpMode_$1823",
                    "typeString": "enum IPaymaster.PostOpMode"
                  },
                  "typeName": {
                    "id": 186,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 185,
                      "name": "PostOpMode",
                      "nameLocations": [
                        "882:10:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1823,
                      "src": "882:10:2"
                    },
                    "referencedDeclaration": 1823,
                    "src": "882:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PostOpMode_$1823",
                      "typeString": "enum IPaymaster.PostOpMode"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "922:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "907:22:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "947:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "939:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:94:2"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:0:2"
            },
            "scope": 341,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 226,
            "nodeType": "FunctionDefinition",
            "src": "1833:316:2",
            "nodes": [],
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1961:188:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 216,
                        "name": "mode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "1972:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PostOpMode_$1823",
                          "typeString": "enum IPaymaster.PostOpMode"
                        }
                      },
                      {
                        "id": 217,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "1978:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 218,
                        "name": "actualGasCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "1987:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 219,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1971:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_PostOpMode_$1823_$_t_bytes_calldata_ptr_$_t_uint256_$",
                      "typeString": "tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256)"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "1971:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d757374206f76657272696465",
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2126:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d",
                          "typeString": "literal_string \"must override\""
                        },
                        "value": "must override"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d",
                          "typeString": "literal_string \"must override\""
                        }
                      ],
                      "id": 221,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2119:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2119:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:23:2"
                }
              ]
            },
            "documentation": {
              "id": 206,
              "nodeType": "StructuredDocumentation",
              "src": "1079:749:2",
              "text": " post-operation handler.\n (verified to be called only through the entryPoint)\n @dev if subclass returns a non-empty context from validatePaymasterUserOp, it must also implement this method.\n @param mode enum with the following options:\n      opSucceeded - user operation succeeded.\n      opReverted  - user op reverted. still has to pay for gas.\n      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                       Now this is the 2nd call, after user's op was deliberately reverted.\n @param context - the context value returned by validatePaymasterUserOp\n @param actualGasCost - actual gas used so far (without this postOp call)."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postOp",
            "nameLocation": "1842:7:2",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "mode",
                  "nameLocation": "1870:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1859:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PostOpMode_$1823",
                    "typeString": "enum IPaymaster.PostOpMode"
                  },
                  "typeName": {
                    "id": 208,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 207,
                      "name": "PostOpMode",
                      "nameLocations": [
                        "1859:10:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1823,
                      "src": "1859:10:2"
                    },
                    "referencedDeclaration": 1823,
                    "src": "1859:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PostOpMode_$1823",
                      "typeString": "enum IPaymaster.PostOpMode"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1899:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1884:22:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "1924:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1916:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1849:94:2"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1961:0:2"
            },
            "scope": 341,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 243,
            "nodeType": "FunctionDefinition",
            "src": "2249:104:2",
            "nodes": [],
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "2283:70:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 238,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2340:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BasePaymaster_$341",
                              "typeString": "contract BasePaymaster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BasePaymaster_$341",
                              "typeString": "contract BasePaymaster"
                            }
                          ],
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2332:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 236,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2332:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2332:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 230,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2293:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EntryPoint_$1778",
                            "typeString": "contract EntryPoint"
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2304:9:2",
                        "memberName": "depositTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2022,
                        "src": "2293:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 233,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2321:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2325:5:2",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2321:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2293:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:53:2"
                }
              ]
            },
            "documentation": {
              "id": 227,
              "nodeType": "StructuredDocumentation",
              "src": "2155:89:2",
              "text": " add a deposit for this paymaster, used for paying for transaction fees"
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2258:7:2",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2265:2:2"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2283:0:2"
            },
            "scope": 341,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 261,
            "nodeType": "FunctionDefinition",
            "src": "2495:169:2",
            "nodes": [],
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "2601:63:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 256,
                        "name": "withdrawAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "2633:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 257,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "2650:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 253,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "2611:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntryPoint_$1778",
                          "typeString": "contract EntryPoint"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2622:10:2",
                      "memberName": "withdrawTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2299,
                      "src": "2611:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2611:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "2611:46:2"
                }
              ]
            },
            "documentation": {
              "id": 244,
              "nodeType": "StructuredDocumentation",
              "src": "2359:131:2",
              "text": " withdraw value from the deposit\n @param withdrawAddress target to send to\n @param amount to withdraw"
            },
            "functionSelector": "205c2878",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 251,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 250,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2587:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "2587:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2587:9:2"
              }
            ],
            "name": "withdrawTo",
            "nameLocation": "2504:10:2",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nameLocation": "2531:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2515:31:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2556:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2548:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2514:49:2"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2601:0:2"
            },
            "scope": 341,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 283,
            "nodeType": "FunctionDefinition",
            "src": "2905:203:2",
            "nodes": [],
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "2979:129:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 275,
                              "name": "entryPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "3040:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EntryPoint_$1778",
                                "typeString": "contract EntryPoint"
                              }
                            },
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3051:15:2",
                            "memberName": "unstakeDelaySec",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1844,
                            "src": "3040:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                              "typeString": "function () view external returns (uint32)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3040:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 278,
                          "name": "extraUnstakeDelaySec",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "3071:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "3040:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "id": 269,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2989:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EntryPoint_$1778",
                            "typeString": "contract EntryPoint"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3000:8:2",
                        "memberName": "addStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2102,
                        "src": "2989:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint32_$returns$__$",
                          "typeString": "function (uint32) payable external"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 272,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3016:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3020:5:2",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3016:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2989:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint32_$returns$__$value",
                        "typeString": "function (uint32) payable external"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:112:2"
                }
              ]
            },
            "documentation": {
              "id": 262,
              "nodeType": "StructuredDocumentation",
              "src": "2670:230:2",
              "text": " add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param extraUnstakeDelaySec - set the stake to the entrypoint's default unstakeDelay plus this value."
            },
            "functionSelector": "0396cb60",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 267,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 266,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2969:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "2969:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2969:9:2"
              }
            ],
            "name": "addStake",
            "nameLocation": "2914:8:2",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "extraUnstakeDelaySec",
                  "nameLocation": "2930:20:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "2923:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2922:29:2"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2979:0:2"
            },
            "scope": 341,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 298,
            "nodeType": "FunctionDefinition",
            "src": "3191:111:2",
            "nodes": [],
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "3243:59:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 293,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3289:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BasePaymaster_$341",
                              "typeString": "contract BasePaymaster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BasePaymaster_$341",
                              "typeString": "contract BasePaymaster"
                            }
                          ],
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3281:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 291,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3281:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3281:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 289,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "3260:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntryPoint_$1778",
                          "typeString": "contract EntryPoint"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3271:9:2",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1945,
                      "src": "3260:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3260:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 288,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "3253:42:2"
                }
              ]
            },
            "documentation": {
              "id": 284,
              "nodeType": "StructuredDocumentation",
              "src": "3114:72:2",
              "text": " return current paymaster's deposit on the entryPoint."
            },
            "functionSelector": "c399ec88",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeposit",
            "nameLocation": "3200:10:2",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3210:2:2"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "3234:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3234:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3233:9:2"
            },
            "scope": 341,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 310,
            "nodeType": "FunctionDefinition",
            "src": "3461:83:2",
            "nodes": [],
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "3503:41:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 304,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "3513:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntryPoint_$1778",
                          "typeString": "contract EntryPoint"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3524:11:2",
                      "memberName": "unlockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2158,
                      "src": "3513:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3513:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "3513:24:2"
                }
              ]
            },
            "documentation": {
              "id": 299,
              "nodeType": "StructuredDocumentation",
              "src": "3308:148:2",
              "text": " unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"
            },
            "functionSelector": "bb9fe6bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 302,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 301,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3493:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3493:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3493:9:2"
              }
            ],
            "name": "unlockStake",
            "nameLocation": "3470:11:2",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3481:2:2"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3503:0:2"
            },
            "scope": 341,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 325,
            "nodeType": "FunctionDefinition",
            "src": "3763:133:2",
            "nodes": [],
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "3838:58:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 321,
                        "name": "withdrawAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "3873:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 318,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "3848:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntryPoint_$1778",
                          "typeString": "contract EntryPoint"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3859:13:2",
                      "memberName": "withdrawStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2241,
                      "src": "3848:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3848:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3848:41:2"
                }
              ]
            },
            "documentation": {
              "id": 311,
              "nodeType": "StructuredDocumentation",
              "src": "3550:208:2",
              "text": " withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress the address to send withdrawn value."
            },
            "functionSelector": "c23a5cea",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 316,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 315,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3828:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3828:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3828:9:2"
              }
            ],
            "name": "withdrawStake",
            "nameLocation": "3772:13:2",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nameLocation": "3802:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "3786:31:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3786:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3785:33:2"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3838:0:2"
            },
            "scope": 341,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 340,
            "nodeType": "FunctionDefinition",
            "src": "3960:110:2",
            "nodes": [],
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "4011:59:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 330,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4029:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4033:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4029:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 334,
                              "name": "entryPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "4051:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EntryPoint_$1778",
                                "typeString": "contract EntryPoint"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_EntryPoint_$1778",
                                "typeString": "contract EntryPoint"
                              }
                            ],
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4043:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 332,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4043:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4043:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4029:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4021:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4021:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "4021:42:2"
                }
              ]
            },
            "documentation": {
              "id": 326,
              "nodeType": "StructuredDocumentation",
              "src": "3902:53:2",
              "text": "validate the call is made from a valid entrypoint"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireFromEntryPoint",
            "nameLocation": "3969:22:2",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3991:2:2"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4011:0:2"
            },
            "scope": 341,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 141,
              "name": "IPaymaster",
              "nameLocations": [
                "402:10:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1824,
              "src": "402:10:2"
            },
            "id": 142,
            "nodeType": "InheritanceSpecifier",
            "src": "402:10:2"
          },
          {
            "baseName": {
              "id": 143,
              "name": "Ownable",
              "nameLocations": [
                "414:7:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "414:7:2"
            },
            "id": 144,
            "nodeType": "InheritanceSpecifier",
            "src": "414:7:2"
          }
        ],
        "canonicalName": "BasePaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 140,
          "nodeType": "StructuredDocumentation",
          "src": "215:151:2",
          "text": " Helper class for creating a paymaster.\n provides helper methods for staking.\n validates that the postOp is called only by the entryPoint"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          341,
          112,
          134,
          1824
        ],
        "name": "BasePaymaster",
        "nameLocation": "385:13:2",
        "scope": 342,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 2
}